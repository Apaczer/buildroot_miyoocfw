diff --git a/examples/gadget-acm-ecm.c b/examples/gadget-acm-ecm.c
index 29360da..52e4c8a 100644
--- a/examples/gadget-acm-ecm.c
+++ b/examples/gadget-acm-ecm.c
@@ -38,7 +38,7 @@ int main(void)
 	usbg_state *s;
 	usbg_gadget *g;
 	usbg_config *c;
-	usbg_function *f_acm0, *f_acm1, *f_ecm;
+	usbg_function *f_acm0;
 	int ret = -EINVAL;
 	int usbg_ret;
 
@@ -60,7 +60,7 @@ int main(void)
 	};
 
 	struct usbg_config_strs c_strs = {
-		.configuration = "CDC 2xACM+ECM"
+		.configuration = "CDC 1xACM"
 	};
 
 	usbg_ret = usbg_init("/sys/kernel/config", &s);
@@ -87,22 +87,6 @@ int main(void)
 		goto out2;
 	}
 
-	usbg_ret = usbg_create_function(g, USBG_F_ACM, "usb1", NULL, &f_acm1);
-	if (usbg_ret != USBG_SUCCESS) {
-		fprintf(stderr, "Error creating acm1 function\n");
-		fprintf(stderr, "Error: %s : %s\n", usbg_error_name(usbg_ret),
-				usbg_strerror(usbg_ret));
-		goto out2;
-	}
-
-	usbg_ret = usbg_create_function(g, USBG_F_ECM, "usb0", NULL, &f_ecm);
-	if (usbg_ret != USBG_SUCCESS) {
-		fprintf(stderr, "Error creating ecm function\n");
-		fprintf(stderr, "Error: %s : %s\n", usbg_error_name(usbg_ret),
-				usbg_strerror(usbg_ret));
-		goto out2;
-	}
-
 	/* NULL can be passed to use kernel defaults */
 	usbg_ret = usbg_create_config(g, 1, "The only one", NULL, &c_strs, &c);
 	if (usbg_ret != USBG_SUCCESS) {
@@ -120,22 +104,6 @@ int main(void)
 		goto out2;
 	}
 
-	usbg_ret = usbg_add_config_function(c, "acm.GS1", f_acm1);
-	if (usbg_ret != USBG_SUCCESS) {
-		fprintf(stderr, "Error adding acm.GS1\n");
-		fprintf(stderr, "Error: %s : %s\n", usbg_error_name(usbg_ret),
-				usbg_strerror(usbg_ret));
-		goto out2;
-	}
-
-	usbg_ret = usbg_add_config_function(c, "ecm.usb0", f_ecm);
-	if (usbg_ret != USBG_SUCCESS) {
-		fprintf(stderr, "Error adding ecm.usb0\n");
-		fprintf(stderr, "Error: %s : %s\n", usbg_error_name(usbg_ret),
-				usbg_strerror(usbg_ret));
-		goto out2;
-	}
-
 	usbg_ret = usbg_enable_gadget(g, DEFAULT_UDC);
 	if (usbg_ret != USBG_SUCCESS) {
 		fprintf(stderr, "Error enabling gadget\n");
diff --git a/examples/gadget-ms.c b/examples/gadget-ms.c
index a5c6681..a9f1b7c 100644
--- a/examples/gadget-ms.c
+++ b/examples/gadget-ms.c
@@ -36,7 +36,7 @@ int main(int argc, char **argv)
 	usbg_state *s;
 	usbg_gadget *g;
 	usbg_config *c;
-	usbg_function *f_ms;
+	usbg_function *f_ms, *f_acm0;
 	int ret = -EINVAL;
 	int usbg_ret;
 
@@ -60,18 +60,25 @@ int main(int argc, char **argv)
 	struct usbg_f_ms_lun_attrs f_ms_luns_array[] = {
 		{
 			.id = -1, /* allows to place in any position */
-			.cdrom = 1,
+			.cdrom = 0,
 			.ro = 0,
 			.nofua = 0,
 			.removable = 1,
-			.file = "",
+			.file = argv[1],
 		}, {
 			.id = -1, /* allows to place in any position */
 			.cdrom = 0,
 			.ro = 0,
 			.nofua = 0,
 			.removable = 1,
-			.file = argv[1],
+			.file = argv[2],
+		}, {
+			.id = -1, /* allows to place in any position */
+			.cdrom = 0,
+			.ro = 1,
+			.nofua = 0,
+			.removable = 1,
+			.file = argv[3],
 		}
 	};
 
@@ -80,6 +87,7 @@ int main(int argc, char **argv)
 		 * When id in lun structure is below 0 we can place it in any
 		 * arbitrary position
 		 */
+		&f_ms_luns_array[2]
 		&f_ms_luns_array[1],
 		&f_ms_luns_array[0],
 		NULL,
@@ -87,7 +95,7 @@ int main(int argc, char **argv)
 
 	struct usbg_f_ms_attrs f_attrs = {
 		.stall = 0,
-		.nluns = 2,
+		.nluns = 3,
 		.luns = f_ms_luns,
 	};
 
@@ -95,7 +103,7 @@ int main(int argc, char **argv)
 			"1xMass Storage"
 	};
 
-	if (argc < 2) {
+	if (argc < 3) {
 		fprintf(stderr, "Usage: gadget-ms file\n");
 		goto out1;
 	}
@@ -116,6 +124,14 @@ int main(int argc, char **argv)
 		goto out2;
 	}
 
+    usbg_ret = usbg_create_function(g, USBG_F_ACM, "usb0", NULL, &f_acm0);
+    if (usbg_ret != USBG_SUCCESS) {
+        fprintf(stderr, "Error creating acm0 function\n");
+        fprintf(stderr, "Error: %s : %s\n", usbg_error_name(usbg_ret),
+                usbg_strerror(usbg_ret));
+        goto out2;
+    }
+
 	usbg_ret = usbg_create_function(g, USBG_F_MASS_STORAGE, "my_reader",
 					&f_attrs, &f_ms);
 	if (usbg_ret != USBG_SUCCESS) {
@@ -134,6 +150,14 @@ int main(int argc, char **argv)
 		goto out2;
 	}
 
+    usbg_ret = usbg_add_config_function(c, "acm.GS0", f_acm0);
+    if (usbg_ret != USBG_SUCCESS) {
+        fprintf(stderr, "Error adding acm.GS0\n");
+        fprintf(stderr, "Error: %s : %s\n", usbg_error_name(usbg_ret),
+                usbg_strerror(usbg_ret));
+        goto out2;
+    }
+
 	usbg_ret = usbg_add_config_function(c, "some_name_here", f_ms);
 	if (usbg_ret != USBG_SUCCESS) {
 		fprintf(stderr, "Error adding ms function\n");
